services:
  postgres:
    image: postgres:17-alpine
    container_name: postgres
    hostname: dbhost 
    networks:
      app_network:
        ipv4_address: 172.20.5.10 
    ports:
      - "5432:5432"
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: docker
  
  pgadmin: 
    image: elestio/pgadmin
    container_name: pgAdmin
    networks:
      app_network:
        ipv4_address: 172.20.5.20
    ports: 
      - "127.0.0.1:5050:80"
    volumes:
      - pgadmin-data:/var/lib/pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    depends_on:
      - postgres

  webapi:
    build: ./webapi
    image: web-api
    container_name: web-api
    networks:
      app_network:
        ipv4_address: 172.20.5.30
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - DB_CONN=Host=dbhost;Port=5432;Database=docker;Username=postgres;Password=admin
      - PYTHON_SERVICE_URL=http://pythonservice:5000
    depends_on:
      - postgres

  pythonservice:
    build:
      context: ./python-service
    image: python-service
    container_name: python-service
    networks:
      app_network:
        ipv4_address: 172.20.5.40
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=dbhost
      - DB_NAME=docker
      - DB_USER=postgres
      - DB_PASSWORD=admin
      - DB_PORT=5432
    depends_on:
      - postgres

volumes:
  postgres-data:
  pgadmin-data:

networks:
  app_network:
    name: app_network
    driver: bridge
    ipam:
      config:
        - subnet: "172.20.0.0/16"
          ip_range: "172.20.5.0/24"
  
 